swagger: '2.0'
info:
  title: scooter
  version: 1.0.0
host: 'school.vvdev.ru'
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /admins/login:
    post:
      tags:
      - Admin
      summary: login
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            login:
              type: string
            password:
              type: string
      responses:
        200:
          description: ok
  /balance/tariffs:
    get:
      tags:
      - Admin
      summary: tariffs
      responses:
        200:
          description: ok
  /balance/tariffs/{type}:
    put:
      tags:
      - Admin
      summary: tariffs
      parameters:
      - in: path
        name: type
        type: string
        required: true
        description: start/normal/pause/stop/exit
      - in: body
        name: body
        schema:
          type: object
          properties:
            userType: 
              type: string
            price:
              type: string
            name:
              type: string
            maxTime:
              type: number
      responses:
        200:
          description: ok
  /users:
    get:
      tags:
      - Admin
      summary: user list
      parameters:
      - in: query
        name: limit
        type: string
      - in: query
        name: page
        type: string
      - in: query
        name: firstName
        type: string
      - in: query
        name: lastName
        type: string
      - in: query
        name: middleName
        type: string
      - in: query
        name: phone
        type: string
      - in: query
        name: type
        type: string
      responses:
        200:
          description: ok
  /users/{id}:
    get:
      tags:
      - Admin
      summary: user by id
      parameters:
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: ok  
    put:
      tags:
      - Admin
      summary: update user
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: body
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            middleName:
              type: string
            email:
              type: string
            birthday:
              type: string
      responses:
        200:
          description: OK
  /users/{id}/balance:
    put:
      tags:
      - Admin
      summary: update user balance
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: body
        schema:
          type: object
          properties:
            amount:
              type: number
      responses:
        200:
          description: OK
    
  /zones:
    put:
      tags:
      - Admin
      - Zones
      summary: update zones
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            zonesData:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  coordinates:
                    type: array
                    items:
                      type: number
                  type:
                    type: string
                    description: green
      responses:
        200:
          description: ok
    get:
      tags:
      - Admin
      - Zones
      summary: zones
      responses:
        200:
          description: ok
  /zones/parse_zone:
    put:
      tags:
      - Admin
      - Zones
      summary: update zones
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            fileName:
              type: string
      responses:
        200:
          description: ok
  /balance/promocodes:
    get:
      tags:
      - Admin
      - Balance
      summary: Update or create promocode
      responses:
        200:
          description: OK
  /balance/promocodes/{code}:
    put:
      tags:
      - Admin
      - Balance
      summary: Update or create promocode
      parameters:
      - in: path
        name: code
        type: string
        required: true
      - in: body
        name: body
        schema:
          type: object
          properties:
            salePercent:
              type: number
            contractStatus:
              type: string
            active: 
              type: boolean
      responses:
        200:
          description: OK
  /contracts/statuses:
    get:
      tags:
      - Admin
      summary: contract statuses list for crm
      responses:
        200:
          description: OK
  /admins/settings:
    get:
      tags:
      - Admin
      summary: admins settings
      responses:
        200:
          description: OK
    put:
      tags:
      - Admin
      summary: update settings
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            phones:
              type: array
              items:
                type: string
      responses:
        200:
          description: ok
  /users/code:
    post:
      tags:
      - Users
      summary: Send code method for register of user
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            phone:
              type: string
              description: 'format +380XXXXXXXXX'
      responses:
        200:
          description: Send code on phone number to user
          schema:
            type: object
            properties:
              message:
                type: string
              code:
                type: string
                description: Code sent on client only in test-version
        400:
          description: Incorrect phone number
        422:
          description: too many requests on send code(only one request in two minutes)
        500:
          description: server error
  /users/firebase_id:
    post:
      tags:
      - Users
      summary: добавить firebaseId
      parameters:
      - in: body
        name: bod
        schema:
          type: object
          properties:
            firebaseId:
              type: string
      responses:
        200:
          description: ok
    delete:
      tags:
      - Users
      summary: удалить firebaseId
      parameters:
      - in: body
        name: bod
        schema:
          type: object
          properties:
            firebaseId:
              type: string
      responses:
        200:
          description: ok
  /users/check_code:
    put:
      tags:
      - Users
      summary: Check code before register or reset password
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            phone:
              type: string
            code:
              type: string
      responses:
        200:
          description: OK
        400:
          description: Enter data
        401:
          description: Auth error
        500:
          description: Server error
  /users/code/confirm:
    post:
      tags:
      - Users
      summary: enter code to confirm login user
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            phone:
              type: string
            code:
              type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/token'
        400:
          description: Enter phone/code
        401:
          description: Auth error
        500:
          description: server error
  /users/info:
    get:
      tags:
      - Users
      summary: Get private information
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/user'
        500:
          description: server error
    put:
      tags:
      - Users
      summary: update private information
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            middleName:
              type: string
            email:
              type: string
            birthday:
              type: string
              description: ISOstring
      responses:
        200:
          description: OK
        500:
          description: server error
  /users/coords:
    post:
      tags:
      - Users
      summary: update coords of user
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            lat:
              type: number
            lon:
              type: number
      responses:
        200:
          description: OK
        500:
          description: server error
  /balance/cards:
    get:
      tags:
      - Balance
      summary: Список карт
      responses:
        200:
          description: OK
  /balance/cards/{id}:
    delete:
      tags:
      - Balance
      summary: Удаление карты
      parameters:
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: ok
  /balance/pay:
    post:
      tags:
      - Balance
      summary: Payment with hold action(first part)
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            amount:
              type: number
            description:
              type: string
            cardNumberLastSymbols:
              type: string
              description: '5469'
            result_url:
              type: string
              description: redirect to this url after pay
            cardId:
              type: string
            type:
              type: string
              description: pay/hold
      responses:
        200:
          description: hold wait (go to second part)
  /balance/cancel:
    put:
      tags:
      - Balance
      summary: cancel payment
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            orderId:
              type: string
      responses:
        200:
          description: success
  /balance/last_hold:
    get:
      tags:
      - Balance
      summary: get hold payment
      responses:
        200:
          description: success
  /balance/status:
    get:
      tags:
      - Balance
      summary: status payment
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            orderId:
              type: string
      responses:
        200:
          description: success
        404:
          description: Bonus code not found
        500:
          description: server error
  /balance/bonus_code:
    post:
      tags:
      - Balance
      summary: bonus code bonuses
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            bonusCode:
              type: string
      responses:
        200:
          description: success
        402:
          description: Error on liqpay
        500:
          description: server error
  /scooters:
    get:
      tags:
      - Scooters
      summary: free scooters list
      responses:
        200:
          description: OK
        500:
          description: server error
  /scooters/{id}:
    put:
      tags:
      - Scooters
      summary: update scooters coords
      parameters:
      - in: path
        name: id
        type: string
        required: true
      - in: body
        name: body
        schema:
          type: object
          properties:
            lat: 
              type: number
            lon:
              type: number
      responses:
        200:
          description: ok
        404:
          description: not found
        500:
          description: server error
  /contracts:
    post:
      tags:
      - Contracts
      summary: create contract
      parameters:
      - in: body
        name: body
        schema:
          type: object
          properties:
            userCoords:
              type: object
              properties:
                lat: 
                  type: number
                lon:
                  type: number
            scooterId:
              type: string
            code:
              type: string
              description: Промокод для скидки по какому либо статусу
      responses:
        200:
          description: OK
        400:
          description: enter data
        409:
          description: get closer to the scooter
        500:
          description: server error
    get:
      tags:
      - Contracts
      summary: get contracts
      responses:
        200:
          description: ok
  /contracts/{id}:
    get:
      tags:
      - Contracts
      summary: get contracts
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: ok
  /contracts/active:
    get:
      tags:
      - Contracts
      summary: get active contract
      responses:
        200:
          description: ok
  /contracts/{id}/pause:
    put:
      tags: 
      - Contracts
      summary: pause
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: OK
        409:
          description: imposible
        500:
          description: server error
  /contract/{id}/normal:
    put:
      tags: 
      - Contracts
      summary: normal
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: OK
        409:
          description: imposible
        500:
          description: server error
  /contract/{id}/stop:
    put:
      tags: 
      - Contracts
      summary: stop
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: OK
        409:
          description: imposible
        500:
          description: server error
  /contract/{id}/exit:
    put:
      tags: 
      - Contracts
      summary: exit
      parameters:
      - in: path
        name: id
        required: true
        type: string
      - in: body
        name: body
        schema:
          type: object
          properties:
            cableImg:
              type: string
            closedLockImg:
              type: string
      responses:
        200:
          description: OK
        409:
          description: imposible
        500:
          description: server error
  /contracts/{id}/sum:
    get:
      tags:
      - Contracts
      summary: get sum and period of this contract
      parameters:
      - in: path
        name: id
        required: true
        type: string
      responses:
        200:
          description: ok
        404:
          description: contract not found
        500:
          description: server error
  /files:
    post:
      tags:
      - Files
      summary: upload file on server
      consumes:
      - multipart/form-data
      parameters:
      - in: formData
        name: file
        type: file
      responses:
        200:
          description: file name on server
        404:
          description: file not found
        500:
          description: server error
        
definitions:
  card:
    type: object
    properties:
      amount:
        type: number
      description:
        type: string
      cardNumber:
        type: string
      cardMonth:
        type: string
      cardYear:
        type: string
      cvv:
        type: string
  contractId:
    type: object
    properties:
      contractId:
        type: string
  token:
    type: object
    properties:
      token:
        type: string
        description: 'send this token in headers x-access-token' 
      _id:
        type: string
        description: user ID
  user:
    type: object
    properties:
      _id: 
        type: string
      phone:
        type: string
      balance:
        type: number